（1）AND型信号机制的引入
  一个进程在运行过程中往往需要申请多个共享资源，如果使用整型或记录型信号量，可能会出现因为申请资源的顺序不当而导致进程死锁。
(2)AND型信号量机制的基本思想
  将进程在整个运行过程中所需要的所有资源一次性分配给进程使用，待该进程使用完后一起释放。
  只要还有一个资源不能分给该进程，则所有可能为之分配的资源也不能分给该进程。
(3)AND型信号量机制的实现
  为不同的的共享资源设定相应的信号量s1,s2,s3..sn,调用Swait操作申请资源，调用Seginal释放资源。
  Swait(s1,s2...sn)
    if (s1.value >= 1 && s2.value >= 1....sn >= 1)
      for each si.value to s
        si.value = si.value - 1;
    else
      把进程插入阻塞队列，pc = Swait;
  Seginal(s1,s2...sn)
    for each si to s
      si.value = si.value + 1;
    将阻塞在阻塞队列的进程唤醒。
  
