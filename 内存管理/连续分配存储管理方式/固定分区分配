简介：将内存用户区划分为若干个固定大小的区域，每个区域中驻留一道程序。
运行原理：内存的用户区域被划分为几个分区，便允许几个进程并发运行。当有一个空闲分区的时候，可从外存中的后备队列中选择一个大小适当的进程放入分区。
当作业结束时，释放所占用的分区，系统又可以从后备进程队列中找出另一个进程调入进程区。
1.划分分区的方法
  1.分区大小相等
    主要用于一台计算机控制多个相同对象的情景。
  2.分区大小不等
    提高了分区的利用率。大进程占大分区，小进程占小分区。
2.支持固定分区分配的数据结构
   定义一个包含4个元素的结构数组，每一个元素对应一个分区。结构体包括4个字段：分区编号，分区大小，分区起始地址和分区状态。
   struct
   {
      int num; //分区编号
      int length; //分区大小
      int addr; //分区起始地址
      int state; //分区状态，1表示被占用，0表示未占用
    }mem_block[];
3.固定分区的进程分配过程
  1.搜索内存分区使用表
  2.寻找大小适合的未使用分区。
  3.将该分区状态改为占用。
4.固定分区的回收过程
  进程终止时只要将其分区状态改为未占用即可。
