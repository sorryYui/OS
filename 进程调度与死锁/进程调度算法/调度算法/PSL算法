1.调度算法
  在使用优先权调度的系统中，每一个进程都有一个与之关联的优先权。优先权值通常是固定区间的数字。
  优先权可以使用一些可测量的数值计算进程的优先值。如时间极限，内存要求，打开文件的数量等等。
  当使用优先权调度算法进行进程调度的时候，系统将CPU分配给就绪队列中优先权最高的进程。
2.PSL的类型
  1.非抢占式PSL
   在支持非抢占式调度程序中，高优先权进程一旦得到处理机，则该进程便一直运行，直到完成或由于某件事件使该进程主动放弃处理机。
   在其运行期间，即使有高优先度的进程到来，系统也不能剥夺当前进程的CPU使用权。所有非抢占式调度难以保证高优先度的进程可以及时调度。
  2.抢占式PSL
    在支持抢占式调度的系统中，如果新到达的进程的优先度高于当前运行的进程，则系统会抢占CPU，把CPU分配给高优先度的进程。而当前运行的进程将会阻塞。
    在抢占式PSL中，每当有新的进程加入至就绪队列中，系统都会将其优先度与当前运行进程的优先度进行比较。
3.优先权的类型
  1.静态优先权。
    静态优先权在创建进程时已经确定，在整个进程生命周期保持不变。静态优先权的值通常可以根据进程的类型，进程需要的资源数量和用户的要求来设定。
  2.动态优先权
    进程创建时被赋予优先权，随进程的推进或随进程等待的时间的增加而改变。
4.PSL存在的问题和解决方案
  1.问题。
    主要问题是无穷阻塞，或称饥饿问题。这里的阻塞是指就绪态进程因得不到CPU而等待的状态。PSL会使某个低优先度的进程无穷等待CPU。
  2.解决方案
    可以随时间的增加而增加进程的优先度。
